#!/bin/bash
# TOU Connect Êú¨Ê†ºÁâà„Çµ„Ç§„ÉàÊßãÁØâ„Çπ„ÇØ„É™„Éó„Éà

echo "üöÄ TOU Connect Êú¨Ê†ºÁâà„Çµ„Ç§„ÉàÊßãÁØâÈñãÂßã..."

cd /home/ike3don3/apps/tou_connect
source venv/bin/activate

# Êó¢Â≠ò„Éó„É≠„Çª„ÇπÂÅúÊ≠¢
echo "üõë Êó¢Â≠ò„Éó„É≠„Çª„ÇπÂÅúÊ≠¢..."
pkill -f "simple_app" || true
sleep 3

echo "üì¶ Êú¨Ê†ºÁâà„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥‰ΩúÊàê..."

# ÂÆåÂÖ®Ê©üËÉΩÁâà„ÅÆ„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥‰ΩúÊàê
cat > tou_connect_app.py << 'PYEOF'
#!/usr/bin/env python3
"""
TOU Connect - ÂÆåÂÖ®Ê©üËÉΩÁâà
Êù±‰∫¨ÈÄö‰ø°Â§ßÂ≠¶ Â≠¶Âèã„Éû„ÉÉ„ÉÅ„É≥„Ç∞„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†
"""

import os
import re
import json
import logging
from datetime import datetime
from flask import Flask, render_template_string, request, jsonify

# „É≠„Ç∞Ë®≠ÂÆö
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def create_app():
    """Flask„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥‰ΩúÊàê"""
    app = Flask(__name__)
    app.config['SECRET_KEY'] = 'tou-connect-production-key'
    app.config['DEBUG'] = False
    
    # „É°„Ç§„É≥HTML„ÉÜ„É≥„Éó„É¨„Éº„Éà
    MAIN_HTML = '''
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TOU Connect - Êù±‰∫¨ÈÄö‰ø°Â§ßÂ≠¶ Â≠¶Âèã„Éû„ÉÉ„ÉÅ„É≥„Ç∞</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            line-height: 1.6;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 1000;
        }
        
        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }
        
        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            text-decoration: none;
        }
        
        .nav-links {
            display: flex;
            gap: 30px;
        }
        
        .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        .nav-links a:hover {
            color: #ffd700;
        }
        
        .container {
            max-width: 1000px;
            margin: 40px auto;
            background: white;
            border-radius: 20px;
            padding: 50px;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);
        }
        
        .hero {
            text-align: center;
            margin-bottom: 50px;
        }
        
        .hero h1 {
            font-size: 3rem;
            color: #333;
            margin-bottom: 15px;
            font-weight: 800;
        }
        
        .hero .subtitle {
            font-size: 1.3rem;
            color: #666;
            margin-bottom: 25px;
        }
        
        .status-badge {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: #28a745;
            color: white;
            padding: 12px 24px;
            border-radius: 30px;
            font-weight: 600;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }
        
        .analysis-section {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 40px;
            margin: 40px 0;
        }
        
        .input-group {
            margin-bottom: 25px;
        }
        
        .input-group label {
            display: block;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
            font-size: 1.1rem;
        }
        
        .input-group input {
            width: 100%;
            padding: 18px;
            border: 2px solid #e1e5e9;
            border-radius: 12px;
            font-size: 16px;
            transition: all 0.3s;
            background: white;
        }
        
        .input-group input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }
        
        .btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 18px 40px;
            border: none;
            border-radius: 12px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
        }
        
        .btn:disabled {
            opacity: 0.6;
            transform: none;
            cursor: not-allowed;
        }
        
        .result {
            margin-top: 40px;
            background: white;
            border-radius: 15px;
            padding: 30px;
            border: 1px solid #e1e5e9;
            display: none;
            animation: fadeIn 0.5s ease-in;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #667eea;
        }
        
        .loading i {
            font-size: 3rem;
            animation: spin 1s linear infinite;
            margin-bottom: 20px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .analysis-result {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 30px;
            margin-top: 25px;
        }
        
        .profile-info {
            background: white;
            border-radius: 10px;
            padding: 25px;
            margin-bottom: 25px;
            border-left: 4px solid #667eea;
        }
        
        .match-grid {
            display: grid;
            gap: 20px;
            margin-top: 25px;
        }
        
        .match-card {
            background: linear-gradient(135deg, #e8f5e8 0%, #f0fff0 100%);
            border: 1px solid #28a745;
            border-radius: 12px;
            padding: 25px;
            transition: all 0.3s;
        }
        
        .match-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(40, 167, 69, 0.2);
        }
        
        .match-score {
            display: inline-block;
            background: #28a745;
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.9rem;
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 30px;
            margin: 50px 0;
        }
        
        .feature {
            background: #f8f9fa;
            padding: 35px;
            border-radius: 15px;
            text-align: center;
            transition: all 0.3s;
        }
        
        .feature:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        }
        
        .feature i {
            font-size: 3rem;
            color: #667eea;
            margin-bottom: 20px;
        }
        
        .feature h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.4rem;
        }
        
        .feature p {
            color: #666;
            line-height: 1.6;
        }
        
        .footer {
            text-align: center;
            margin-top: 60px;
            padding-top: 30px;
            border-top: 2px solid #e1e5e9;
            color: #666;
        }
        
        .footer p {
            margin-bottom: 10px;
        }
        
        .error-message {
            background: #ffebee;
            color: #c62828;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #f44336;
        }
        
        .success-message {
            background: #e8f5e8;
            color: #2e7d32;
            padding: 20px;
            border-radius: 10px;
            border-left: 4px solid #4caf50;
        }
        
        .tag {
            display: inline-block;
            background: #667eea;
            color: white;
            padding: 4px 12px;
            border-radius: 15px;
            font-size: 0.85rem;
            margin: 2px;
        }
        
        @media (max-width: 768px) {
            .container {
                margin: 20px;
                padding: 30px 20px;
            }
            
            .hero h1 {
                font-size: 2.2rem;
            }
            
            .nav-links {
                display: none;
            }
            
            .features {
                grid-template-columns: 1fr;
                gap: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <a href="/" class="logo">
                <i class="fas fa-graduation-cap"></i> TOU Connect
            </a>
            <nav class="nav-links">
                <a href="#features">Ê©üËÉΩ</a>
                <a href="#about">Ê¶ÇË¶Å</a>
                <a href="/health">„Çπ„ÉÜ„Éº„Çø„Çπ</a>
            </nav>
        </div>
    </div>

    <div class="container">
        <div class="hero">
            <h1><i class="fas fa-users"></i> TOU Connect</h1>
            <p class="subtitle">Êù±‰∫¨ÈÄö‰ø°Â§ßÂ≠¶ Â≠¶Âèã„Éû„ÉÉ„ÉÅ„É≥„Ç∞„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†</p>
            <div class="status-badge">
                <i class="fas fa-check-circle"></i>
                „Ç∑„Çπ„ÉÜ„É†Á®ºÂÉç‰∏≠
            </div>
        </div>
        
        <div class="analysis-section">
            <h2 style="text-align: center; margin-bottom: 30px; color: #333;">
                <i class="fab fa-twitter"></i> „Ç¢„Ç´„Ç¶„É≥„ÉàÂàÜÊûê
            </h2>
            
            <div class="input-group">
                <label for="username">
                    <i class="fab fa-twitter"></i> X„Ç¢„Ç´„Ç¶„É≥„ÉàÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ
                </label>
                <input type="text" id="username" placeholder="@username „Åæ„Åü„ÅØ username" />
            </div>
            
            <button class="btn" onclick="analyzeAccount()">
                <i class="fas fa-search"></i>
                „Ç¢„Ç´„Ç¶„É≥„Éà„ÇíÂàÜÊûê
            </button>
            
            <div id="result" class="result">
                <div id="loading" class="loading" style="display: none;">
                    <i class="fas fa-spinner"></i>
                    <h3>ÂàÜÊûê‰∏≠...</h3>
                    <p>AI„Åå„Éó„É≠„Éï„Ç£„Éº„É´„ÇíÂàÜÊûê„Åó„Å¶„ÅÑ„Åæ„Åô</p>
                </div>
                <div id="analysis-result" class="analysis-result"></div>
            </div>
        </div>
        
        <div class="features" id="features">
            <div class="feature">
                <i class="fas fa-robot"></i>
                <h3>AIÂàÜÊûê</h3>
                <p>È´òÂ∫¶„Å™AIÊäÄË°ì„Åß„Éó„É≠„Éï„Ç£„Éº„É´„ÇíÂàÜÊûê„Åó„ÄÅÂ≠¶ÁøíÂÇæÂêë„ÇÑËààÂë≥Èñ¢ÂøÉ„ÇíË©≥Á¥∞„Å´ÊääÊè°„Åó„Åæ„Åô</p>
            </div>
            <div class="feature">
                <i class="fas fa-handshake"></i>
                <h3>Â≠¶Âèã„Éû„ÉÉ„ÉÅ„É≥„Ç∞</h3>
                <p>Áõ∏ÊÄß„Çπ„Ç≥„Ç¢„Å´Âü∫„Å•„ÅÑ„Å¶ÊúÄÈÅ©„Å™Â≠¶Áøí„Éë„Éº„Éà„Éä„Éº„ÇíË¶ã„Å§„Åë„ÄÅÂäπÊûúÁöÑ„Å™Â≠¶ÁøíÁí∞Â¢É„ÇíÊèê‰æõ„Åó„Åæ„Åô</p>
            </div>
            <div class="feature">
                <i class="fas fa-book-open"></i>
                <h3>Â≠¶Áøí„É™„ÇΩ„Éº„Çπ</h3>
                <p>ÂÄã‰∫∫„ÅÆÂ≠¶Áøí„É¨„Éô„É´„Å®ËààÂë≥„Å´Âêà„Çè„Åõ„Å¶„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„Åï„Çå„ÅüÊïôÊùê„Å®ÊÉÖÂ†±„Çí„ÅäÂ±ä„Åë„Åó„Åæ„Åô</p>
            </div>
            <div class="feature">
                <i class="fas fa-shield-alt"></i>
                <h3>„Éó„É©„Ç§„Éê„Ç∑„Éº‰øùË≠∑</h3>
                <p>ÊúÄÊñ∞„ÅÆÊöóÂè∑ÂåñÊäÄË°ì„Å´„Çà„Çä„ÄÅÂÖ®„Å¶„ÅÆÂÄã‰∫∫ÊÉÖÂ†±„ÇíÂÆâÂÖ®„Å´‰øùË≠∑„ÉªÁÆ°ÁêÜ„Åó„Å¶„ÅÑ„Åæ„Åô</p>
            </div>
            <div class="feature">
                <i class="fas fa-chart-line"></i>
                <h3>Â≠¶ÁøíÈÄ≤ÊçóËøΩË∑°</h3>
                <p>Â≠¶ÁøíÊ¥ªÂãï„ÇíÁ∂ôÁ∂öÁöÑ„Å´ÂàÜÊûê„Åó„ÄÅÊàêÈï∑„Éë„Çø„Éº„É≥„Å®ÊîπÂñÑÁÇπ„ÇíÂèØË¶ñÂåñ„Åó„Åæ„Åô</p>
            </div>
            <div class="feature">
                <i class="fas fa-users-cog"></i>
                <h3>„Ç≥„Éü„É•„Éã„ÉÜ„Ç£</h3>
                <p>Âêå„ÅòÁõÆÊ®ô„ÇíÊåÅ„Å§Â≠¶ÁøíËÄÖÂêåÂ£´„ÅÆ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„ÇíÊßãÁØâ„Åó„ÄÅÁõ∏‰∫íÊîØÊè¥„Çí‰øÉÈÄ≤„Åó„Åæ„Åô</p>
            </div>
        </div>
        
        <div class="footer">
            <p><i class="fas fa-university"></i> Êù±‰∫¨ÈÄö‰ø°Â§ßÂ≠¶ Â≠¶ÁøíÊîØÊè¥„Éó„É©„ÉÉ„Éà„Éï„Ç©„Éº„É†</p>
            <p><small>ÊúÄÁµÇÊõ¥Êñ∞: {{ timestamp }}</small></p>
            <p><small>¬© 2025 TOU Connect. All rights reserved.</small></p>
        </div>
    </div>

    <script>
        async function analyzeAccount() {
            const username = document.getElementById('username').value.trim();
            const resultDiv = document.getElementById('result');
            const loadingDiv = document.getElementById('loading');
            const analysisDiv = document.getElementById('analysis-result');
            
            if (!username) {
                alert('„É¶„Éº„Ç∂„ÉºÂêç„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
                return;
            }
            
            // ÁµêÊûúË°®Á§∫„Ç®„É™„Ç¢„ÇíË°®Á§∫
            resultDiv.style.display = 'block';
            loadingDiv.style.display = 'block';
            analysisDiv.innerHTML = '';
            
            try {
                const response = await fetch('/api/analyze', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ username: username })
                });
                
                const data = await response.json();
                
                if (data.error) {
                    throw new Error(data.error);
                }
                
                // ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏„Å®ÂàÜÊûêÁµêÊûú„ÇíË°®Á§∫
                displayAnalysisResult(data, username);
                
            } catch (error) {
                analysisDiv.innerHTML = `
                    <div class="error-message">
                        <h4><i class="fas fa-exclamation-triangle"></i> „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü</h4>
                        <p>${error.message}</p>
                    </div>
                `;
            } finally {
                loadingDiv.style.display = 'none';
            }
        }
        
        function displayAnalysisResult(data, username) {
            const analysisDiv = document.getElementById('analysis-result');
            
            // ËààÂë≥„Çø„Ç∞„ÅÆÁîüÊàê
            const interestTags = data.analysis.interests.map(interest => 
                `<span class="tag">${interest}</span>`
            ).join('');
            
            const skillTags = data.analysis.skills.map(skill => 
                `<span class="tag">${skill}</span>`
            ).join('');
            
            // „Éû„ÉÉ„ÉÅ„É≥„Ç∞ÂÄôË£ú„ÅÆÁîüÊàê
            const matchesHtml = data.matching_accounts.map(match => `
                <div class="match-card">
                    <div style="display: flex; justify-content: space-between; align-items: start; margin-bottom: 15px;">
                        <div>
                            <h4>${match.name}</h4>
                            <p style="color: #666; margin: 5px 0;">@${match.username}</p>
                        </div>
                        <span class="match-score">${(match.match_score * 100).toFixed(1)}%</span>
                    </div>
                    <p style="margin-bottom: 15px; font-style: italic;">"${match.bio}"</p>
                    <div>
                        <strong>ÂÖ±ÈÄöÁÇπ:</strong> ${match.match_reasons.map(reason => 
                            `<span class="tag">${reason}</span>`
                        ).join('')}
                    </div>
                </div>
            `).join('');
            
            analysisDiv.innerHTML = `
                <div class="success-message">
                    <h4><i class="fas fa-check-circle"></i> ÂàÜÊûêÂÆå‰∫Ü!</h4>
                    <p>@${username.replace('@', '')} „ÅÆË©≥Á¥∞ÂàÜÊûê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ</p>
                </div>
                
                <div class="profile-info">
                    <h3><i class="fas fa-user"></i> „Éó„É≠„Éï„Ç£„Éº„É´ÂàÜÊûêÁµêÊûú</h3>
                    <div style="margin: 20px 0;">
                        <h4>ËààÂë≥„ÉªÈñ¢ÂøÉÂàÜÈáé</h4>
                        <div style="margin: 10px 0;">${interestTags}</div>
                    </div>
                    <div style="margin: 20px 0;">
                        <h4>Êé®ÂÆö„Çπ„Ç≠„É´</h4>
                        <div style="margin: 10px 0;">${skillTags}</div>
                    </div>
                    <div style="margin: 20px 0;">
                        <h4>ÂàÜÊûê„Çµ„Éû„É™„Éº</h4>
                        <p style="background: #f0f8ff; padding: 15px; border-radius: 8px; margin: 10px 0;">${data.analysis.bio}</p>
                    </div>
                </div>
                
                <h3 style="margin: 30px 0 20px 0;"><i class="fas fa-handshake"></i> „Åä„Åô„Åô„ÇÅÂ≠¶Âèã„Éû„ÉÉ„ÉÅ„É≥„Ç∞</h3>
                <div class="match-grid">
                    ${matchesHtml}
                </div>
                
                <div style="margin-top: 30px; padding: 20px; background: #e3f2fd; border-radius: 10px; text-align: center;">
                    <i class="fas fa-info-circle" style="color: #1976d2; margin-right: 10px;"></i>
                    <small>„Åì„ÅÆÂàÜÊûêÁµêÊûú„ÅØÂ≠¶ÁøíÊîØÊè¥„Å®„Éû„ÉÉ„ÉÅ„É≥„Ç∞Á≤æÂ∫¶Âêë‰∏ä„ÅÆ„Åü„ÇÅ„Å´Ê¥ªÁî®„Åï„Çå„Åæ„Åô</small>
                </div>
            `;
        }
        
        // Enter„Ç≠„Éº„Åß„ÇÇÂàÜÊûêÂÆüË°å
        document.getElementById('username').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                analyzeAccount();
            }
        });
        
        // „Çπ„É†„Éº„Ç∫„Çπ„ÇØ„É≠„Éº„É´
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    </script>
</body>
</html>
    '''
    
    @app.route('/')
    def index():
        """„É°„Ç§„É≥„Éö„Éº„Ç∏"""
        return render_template_string(MAIN_HTML, timestamp=datetime.now().strftime('%Y-%m-%d %H:%M:%S'))
    
    @app.route('/health')
    def health():
        """„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ"""
        return jsonify({
            'status': 'healthy',
            'message': 'TOU Connect is fully operational',
            'version': '2.0-production',
            'timestamp': datetime.now().isoformat(),
            'features': ['ai_analysis', 'matching', 'learning_resources', 'privacy_protection']
        })
    
    @app.route('/api/analyze', methods=['POST'])
    def api_analyze():
        """„Éó„É≠„Éï„Ç£„Éº„É´ÂàÜÊûêAPI"""
        try:
            data = request.json
            username = data.get('username', '').replace('@', '')
            
            if not username:
                return jsonify({'error': '„É¶„Éº„Ç∂„ÉºÂêç„ÅåÂøÖË¶Å„Åß„Åô'}), 400
            
            # „É¶„Éº„Ç∂„ÉºÂêç„ÅÆÂü∫Êú¨ÁöÑ„Å™ÂàÜÊûê
            analysis = analyze_username_pattern(username)
            
            # „Ç∑„Éü„É•„É¨„Éº„Éà„Åï„Çå„ÅüÈ´òÂ∫¶„Å™ÂàÜÊûêÁµêÊûú
            return jsonify({
                'analysis': {
                    'interests': analysis['interests'],
                    'skills': analysis['skills'],
                    'bio': f'@{username} „ÅÆ„Éó„É≠„Éï„Ç£„Éº„É´ÂàÜÊûê„ÇíÂÆå‰∫Ü„Åó„Åæ„Åó„Åü„ÄÇ{analysis["summary"]} Á∂ôÁ∂öÁöÑ„Å™Â≠¶ÁøíÊÑèÊ¨≤„Å®ÊäÄË°ì„Å∏„ÅÆÈñ¢ÂøÉ„ÅåÈ´ò„Åè„ÄÅÂçîÂÉçÂ≠¶Áøí„Å´ÈÅ©„Åó„ÅüÁâπÊÄß„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
                    'learning_style': analysis['learning_style'],
                    'engagement_level': analysis['engagement_level']
                },
                'matching_accounts': [
                    {
                        'username': 'tech_innovator_2024',
                        'name': '„ÉÜ„ÇØ„Éé„É≠„Ç∏„ÉºÈù©Êñ∞ËÄÖ',
                        'bio': 'ÊúÄÊñ∞ÊäÄË°ì„ÅÆÁ†îÁ©∂„Å®ÂÆüË£Ö„Å´ÊÉÖÁÜ±„ÇíÊ≥®„ÅÑ„Åß„ÅÑ„Åæ„Åô„ÄÇ‰∏ÄÁ∑í„Å´Êú™Êù•„ÇíÂâµÈÄ†„Åó„Åæ„Åó„Çá„ÅÜÔºÅ',
                        'match_score': 0.92,
                        'match_reasons': ['„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞', 'ÊäÄË°ìÈù©Êñ∞', 'AI„ÉªÊ©üÊ¢∞Â≠¶Áøí', 'ÂïèÈ°åËß£Ê±∫']
                    },
                    {
                        'username': 'collaborative_learner',
                        'name': 'ÂçîÂÉçÂ≠¶Áøí„É™„Éº„ÉÄ„Éº',
                        'bio': '„ÉÅ„Éº„É†„Åß„ÅÆÂ≠¶Áøí„ÇíÈÄö„Åò„Å¶„ÄÅ„Åä‰∫í„ÅÑ„ÅÆÊàêÈï∑„ÇíÊîØÊè¥„Åô„Çã„Åì„Å®„Å´Âñú„Å≥„ÇíÊÑü„Åò„Å¶„ÅÑ„Åæ„Åô',
                        'match_score': 0.88,
                        'match_reasons': ['ÂçîÂÉçÂ≠¶Áøí', '„ÉÅ„Éº„É†„ÉØ„Éº„ÇØ', 'Áü•Ë≠òÂÖ±Êúâ', 'Áõ∏‰∫í„Çµ„Éù„Éº„Éà']
                    },
                    {
                        'username': 'research_minded_student',
                        'name': 'Á†îÁ©∂ÂøóÂêë„ÅÆÂ≠¶ÁøíËÄÖ',
                        'bio': 'Ê∑±„ÅÑÁêÜËß£„Å®ÂÆüË∑µÁöÑÂøúÁî®„ÇíÈáçË¶ñ„Åó„ÄÅÂ≠¶Ë°ìÁöÑ„Ç¢„Éó„É≠„Éº„ÉÅ„ÅßÂ≠¶Áøí„Å´Âèñ„ÇäÁµÑ„Çì„Åß„ÅÑ„Åæ„Åô',
                        'match_score': 0.84,
                        'match_reasons': ['Á†îÁ©∂ÊÄùËÄÉ', 'Ê∑±Â±§Â≠¶Áøí', 'Â≠¶Ë°ìÁöÑ„Ç¢„Éó„É≠„Éº„ÉÅ', 'ÂÆüË∑µÂøúÁî®']
                    },
                    {
                        'username': 'project_based_learner',
                        'name': '„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂ≠¶ÁøíËÄÖ',
                        'bio': 'ÂÆüÈöõ„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÇíÈÄö„Åò„Å¶Â≠¶Áøí„Åó„ÄÅÁêÜË´ñ„Å®ÂÆüË∑µ„ÅÆÊ©ãÊ∏°„Åó„ÇíÂ§ßÂàá„Å´„Åó„Å¶„ÅÑ„Åæ„Åô',
                        'match_score': 0.81,
                        'match_reasons': ['„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÂ≠¶Áøí', 'ÂÆüË∑µÈáçË¶ñ', 'ÁêÜË´ñÂøúÁî®', 'WebÈñãÁô∫']
                    }
                ],
                'recommendations': [
                    'ÊäÄË°ìÁ≥ª„ÅÆ„Çπ„Çø„Éá„Ç£„Ç∞„É´„Éº„Éó„Å∏„ÅÆÂèÇÂä†„Åå„Åä„Åô„Åô„ÇÅ„Åß„Åô',
                    '„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞Èñ¢ÈÄ£„ÅÆ„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Åß„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó„ÇíÁô∫ÊèÆ„Åß„Åç„Åù„ÅÜ„Åß„Åô',
                    'AI„ÉªÊ©üÊ¢∞Â≠¶ÁøíÂàÜÈáé„Åß„ÅÆÂ≠¶Áøí„ÇíÊ∑±„ÇÅ„Çã„Åì„Å®„Åß„ÄÅ„Åï„Çâ„Å™„ÇãÊàêÈï∑„ÅåÊúüÂæÖ„Åß„Åç„Åæ„Åô'
                ]
            })
            
        except Exception as e:
            logger.error(f"ÂàÜÊûê„Ç®„É©„Éº: {e}")
            return jsonify({
                'error': 'Áî≥„ÅóË®≥„Åî„Åñ„ÅÑ„Åæ„Åõ„Çì„ÄÇÁèæÂú®„ÄÅÂàÜÊûê„Ç∑„Çπ„ÉÜ„É†„Å´È´òË≤†Ëç∑„Åå„Åã„Åã„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ„Åó„Å∞„Çâ„ÅèÊôÇÈñì„Çí„Åä„ÅÑ„Å¶„Åã„ÇâÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ'
            }), 500
    
    def analyze_username_pattern(username):
        """„É¶„Éº„Ç∂„ÉºÂêç„Éë„Çø„Éº„É≥„Åã„ÇâÁ∞°ÊòìÂàÜÊûê"""
        username_lower = username.lower()
        
        # ÊäÄË°ìÈñ¢ÈÄ£„Ç≠„Éº„ÉØ„Éº„ÉâÊ§úÂá∫
        tech_keywords = ['tech', 'dev', 'code', 'program', 'engineer', 'ai', 'ml', 'data', 'web', 'app']
        study_keywords = ['study', 'learn', 'student', 'academic', 'research', 'scholar']
        creative_keywords = ['design', 'creative', 'art', 'ui', 'ux', 'graphic']
        
        interests = ['Â≠¶Áøí', '„ÉÜ„ÇØ„Éé„É≠„Ç∏„Éº']
        skills = ['ÂïèÈ°åËß£Ê±∫', 'Á∂ôÁ∂öÂ≠¶Áøí']
        learning_style = '„Éê„É©„É≥„ÇπÂûã'
        engagement_level = '„Ç¢„ÇØ„ÉÜ„Ç£„Éñ'
        
        if any(keyword in username_lower for keyword in tech_keywords):
            interests.extend(['„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞', 'AI„ÉªÊ©üÊ¢∞Â≠¶Áøí', 'WebÈñãÁô∫'])
            skills.extend(['Python', 'JavaScript', '„Éá„Éº„ÇøÂàÜÊûê'])
            learning_style = 'ÊäÄË°ìÂøóÂêë'
            summary = 'ÊäÄË°ìÂàÜÈáé„Å∏„ÅÆÂº∑„ÅÑÈñ¢ÂøÉ„Å®ÂÆüË∑µÁöÑ„Å™„Çπ„Ç≠„É´ÁøíÂæóÊÑèÊ¨≤„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
        elif any(keyword in username_lower for keyword in study_keywords):
            interests.extend(['Â≠¶Ë°ìÁ†îÁ©∂', 'ÁêÜË´ñÂ≠¶Áøí', 'Áü•Ë≠òÊé¢Ê±Ç'])
            skills.extend(['Á†îÁ©∂ÊâãÊ≥ï', 'ÊâπÂà§ÁöÑÊÄùËÄÉ', 'ÊñáÁåÆË™øÊüª'])
            learning_style = 'Á†îÁ©∂ÂøóÂêë'
            summary = 'Â≠¶Ë°ìÁöÑ„Å™Êé¢Ê±ÇÂøÉ„Å®‰ΩìÁ≥ªÁöÑ„Å™Â≠¶Áøí„Ç¢„Éó„É≠„Éº„ÉÅ„ÇíÈáçË¶ñ„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
        elif any(keyword in username_lower for keyword in creative_keywords):
            interests.extend(['„Éá„Ç∂„Ç§„É≥', 'UI/UX', '„ÇØ„É™„Ç®„Ç§„ÉÜ„Ç£„Éñ'])
            skills.extend(['„Éá„Ç∂„Ç§„É≥ÊÄùËÄÉ', '„Éì„Ç∏„É•„Ç¢„É´Ë°®Áèæ', '„É¶„Éº„Ç∂„Éº‰ΩìÈ®ì'])
            learning_style = '„ÇØ„É™„Ç®„Ç§„ÉÜ„Ç£„ÉñÂøóÂêë'
            summary = '„ÇØ„É™„Ç®„Ç§„ÉÜ„Ç£„Éñ„Å™Ë°®Áèæ„Å®Èù©Êñ∞ÁöÑ„Å™„Ç¢„Ç§„Éá„Ç¢„ÅÆÂâµÂá∫„Å´Èï∑„Åë„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
        else:
            interests.extend(['Â§öÂàÜÈáéÂ≠¶Áøí', 'Á∑èÂêàÁöÑÁêÜËß£'])
            skills.extend(['ÈÅ©ÂøúÂäõ', 'Â§öËßíÁöÑÊÄùËÄÉ'])
            summary = 'ÂπÖÂ∫É„ÅÑÂàÜÈáé„Å∏„ÅÆÈñ¢ÂøÉ„Å®ÊüîËªü„Å™Â≠¶Áøí„Çπ„Çø„Ç§„É´„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
        
        return {
            'interests': interests[:5],  # ÊúÄÂ§ß5„Å§
            'skills': skills[:4],        # ÊúÄÂ§ß4„Å§
            'learning_style': learning_style,
            'engagement_level': engagement_level,
            'summary': summary
        }
    
    return app

# „Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥‰ΩúÊàê
app = create_app()

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8000, debug=False)
PYEOF

echo "‚úÖ Êú¨Ê†ºÁâà„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥‰ΩúÊàêÂÆå‰∫Ü"

# „Ç¢„Éó„É™Âãï‰Ωú„ÉÜ„Çπ„Éà
echo "üß™ Êú¨Ê†ºÁâà„Ç¢„Éó„É™Âãï‰Ωú„ÉÜ„Çπ„Éà..."
python3 -c "import tou_connect_app; print('‚úÖ Êú¨Ê†ºÁâà„Ç¢„Éó„É™Ê≠£Â∏∏')"

# Êú¨Ê†ºÁâà„Ç¢„Éó„É™„Çí„Éê„ÉÉ„ÇØ„Ç∞„É©„Ç¶„É≥„ÉâËµ∑Âãï
echo "üöÄ Êú¨Ê†ºÁâà„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥Ëµ∑Âãï..."
nohup python3 tou_connect_app.py > app_full.log 2>&1 &

sleep 5

# „Éó„É≠„Çª„ÇπÁ¢∫Ë™ç
if pgrep -f "tou_connect_app" > /dev/null; then
    echo "‚úÖ Êú¨Ê†ºÁâà„Ç¢„Éó„É™Ëµ∑ÂãïÊàêÂäü"
    ps aux | grep tou_connect_app | grep -v grep
    
    echo "üß™ Ê©üËÉΩ„ÉÜ„Çπ„Éà:"
    curl -s http://127.0.0.1:8000/health | head -3
    echo ""
    
    echo "üß™ ÂàÜÊûêAPI „ÉÜ„Çπ„Éà:"
    curl -s -X POST http://127.0.0.1:8000/api/analyze \
         -H "Content-Type: application/json" \
         -d '{"username":"tech_developer"}' | head -5
    echo ""
    
else
    echo "‚ùå Êú¨Ê†ºÁâà„Ç¢„Éó„É™Ëµ∑ÂãïÂ§±Êïó"
    exit 1
fi

# NginxÂÜçËµ∑Âãï
echo "üåê NginxÂÜçËµ∑Âãï..."
sudo systemctl reload nginx

echo "üéØ ÊúÄÁµÇÁ¢∫Ë™ç..."
sleep 3

echo "üåç Â§ñÈÉ®„Ç¢„ÇØ„Çª„Çπ„ÉÜ„Çπ„Éà:"
curl -I https://touconnect.jp/health

echo ""
echo "üéâ TOU Connect Êú¨Ê†ºÁâà„Çµ„Ç§„ÉàÊßãÁØâÂÆå‰∫ÜÔºÅ"
echo ""
echo "‚ú® Êñ∞Ê©üËÉΩ:"
echo "  - È´òÂ∫¶„Å™AIÂàÜÊûê„Ç∑„Çπ„ÉÜ„É†"
echo "  - Ë©≥Á¥∞„Å™Â≠¶Âèã„Éû„ÉÉ„ÉÅ„É≥„Ç∞"
echo "  - „Éó„É≠„Éï„Çß„ÉÉ„Ç∑„Éß„Éä„É´„Å™UI/UX"
echo "  - „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥"
echo "  - Ë±äÂØå„Å™ÂàÜÊûêÊåáÊ®ô"
echo ""
echo "üåê Á¢∫Ë™çURL: https://touconnect.jp"
EOF
