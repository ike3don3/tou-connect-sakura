# TOU Connect さくらのVPS用 Nginx 設定

# レート制限設定
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;

# HTTP から HTTPS へのリダイレクト
server {
    listen 80;
    listen [::]:80;
    server_name touconnect.jp www.touconnect.jp;
    
    # Let's Encrypt 証明書取得用
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    # その他のリクエストはHTTPSにリダイレクト
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS メインサーバー
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name touconnect.jp www.touconnect.jp;
    
    # SSL 証明書設定（Let's Encrypt）
    ssl_certificate /etc/letsencrypt/live/touconnect.jp/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/touconnect.jp/privkey.pem;
    
    # SSL 設定
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'none';" always;
    
    # ログ設定
    access_log /var/log/nginx/touconnect_access.log;
    error_log /var/log/nginx/touconnect_error.log;
    
    # 基本設定
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Gzip 圧縮
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 静的ファイル配信
    location /static/ {
        alias /opt/tou_connect/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Gzip 圧縮済みファイルの配信
        location ~* \.(css|js)$ {
            gzip_static on;
        }
        
        # 画像ファイルの最適化
        location ~* \.(jpg|jpeg|png|gif|ico|svg)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # ファビコンとロボット
    location = /favicon.ico {
        alias /opt/tou_connect/static/favicon.ico;
        log_not_found off;
        access_log off;
        expires 1M;
    }
    
    location = /robots.txt {
        alias /opt/tou_connect/static/robots.txt;
        log_not_found off;
        access_log off;
    }
    
    # ヘルスチェック（監視用）
    location /health {
        proxy_pass http://127.0.0.1:8000;
        access_log off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API エンドポイント（レート制限あり）
    location /api/ {
        # レート制限
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # タイムアウト設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # バッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # 認証関連エンドポイント（厳しいレート制限）
    location ~ ^/(login|register|analyze)$ {
        limit_req zone=auth burst=5 nodelay;
        limit_req_status 429;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # メインアプリケーション
    location / {
        limit_req zone=general burst=50 nodelay;
        
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket サポート（将来の拡張用）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # タイムアウト設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # バッファリング設定
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
}